generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id                  String               @id @default(uuid())
  host                User                 @relation("HostedRooms", fields: [hostId], references: [id])
  hostId              String
  allowWifiAutoJoin   Boolean              @default(false) // ⬅️ Host-controlled toggle
  participants        Participant[]
  messages            Message[]
  networkFingerprints NetworkFingerPrint[]
  createdAt           DateTime             @default(now())
}

model Participant {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  joinedAt  DateTime @default(now())

  // Optional additions for real-time status
  isMuted   Boolean  @default(false)
  isVideoOn Boolean  @default(true)

  @@unique([userId, roomId]) // Prevent duplicate joins
}


model Message {
  id        String   @id @default(uuid())
  content   String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  timestamp DateTime @default(now())
}


model NetworkFingerPrint {
  id        String   @id @default(uuid())
  signature String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime @default(now())

  @@unique([signature, roomId]) //
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
  name     String

  hostedRooms    Room[]        @relation("HostedRooms")
  messages       Message[]
  participations Participant[]
}
